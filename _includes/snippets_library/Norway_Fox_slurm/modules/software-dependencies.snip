To demonstrate, let's use `module list`. `module list` shows all loaded
software modules.

```
{{ site.host_prompt }} module list
```
{: .language-bash}
```
Currently Loaded Modules:
  1) GCCcore/7.3.0                    11) OpenBLAS/0.3.1-GCC-7.3.0-2.30
  2) zlib/1.2.11-GCCcore-7.3.0        12) gompi/2018b
  3) binutils/2.30-GCCcore-7.3.0      13) FFTW/3.3.8-gompi-2018b
  4) GCC/7.3.0-2.30                   14) ScaLAPACK/2.0.2-gompi-2018b-OpenBLAS-0.3.1
  5) numactl/2.0.11-GCCcore-7.3.0     15) foss/2018b
  6) XZ/5.2.4-GCCcore-7.3.0           16) ncurses/6.1-GCCcore-7.3.0
  7) libxml2/2.9.8-GCCcore-7.3.0      17) bzip2/1.0.6-GCCcore-7.3.0
  8) libpciaccess/0.14-GCCcore-7.3.0  18) cURL/7.60.0-GCCcore-7.3.0
  9) hwloc/1.11.10-GCCcore-7.3.0      19) SAMtools/1.11-foss-2018b
 10) OpenMPI/3.1.1-GCC-7.3.0-2.30

```
{: .output}

```
{{ site.host_prompt }} module load Kraken2/2.1.1-foss-2018b-Perl-5.28.0
{{ site.host_prompt }} module list
```
{: .language-bash}

```
Currently Loaded Modules:
  1) GCCcore/7.3.0                               17) bzip2/1.0.6-GCCcore-7.3.0
  2) zlib/1.2.11-GCCcore-7.3.0                   18) cURL/7.60.0-GCCcore-7.3.0
  3) binutils/2.30-GCCcore-7.3.0                 19) SAMtools/1.11-foss-2018b
  4) GCC/7.3.0-2.30                              20) expat/2.2.5-GCCcore-7.3.0
  5) numactl/2.0.11-GCCcore-7.3.0                21) Perl/5.28.0-GCCcore-7.3.0
  6) XZ/5.2.4-GCCcore-7.3.0                      22) PCRE/8.41-GCCcore-7.3.0
  7) libxml2/2.9.8-GCCcore-7.3.0                 23) Boost/1.67.0-foss-2018b
  8) libpciaccess/0.14-GCCcore-7.3.0             24) GMP/6.1.2-GCCcore-7.3.0
  9) hwloc/1.11.10-GCCcore-7.3.0                 25) libpng/1.6.34-GCCcore-7.3.0
 10) OpenMPI/3.1.1-GCC-7.3.0-2.30                26) NASM/2.13.03-GCCcore-7.3.0
 11) OpenBLAS/0.3.1-GCC-7.3.0-2.30               27) libjpeg-turbo/2.0.0-GCCcore-7.3.0
 12) gompi/2018b                                 28) LMDB/0.9.22-GCCcore-7.3.0
 13) FFTW/3.3.8-gompi-2018b                      29) BLAST+/2.7.1-foss-2018b
 14) ScaLAPACK/2.0.2-gompi-2018b-OpenBLAS-0.3.1  30) libidn/1.35-GCCcore-7.3.0
 15) foss/2018b                                  31) wget/1.20.1-GCCcore-7.3.0
 16) ncurses/6.1-GCCcore-7.3.0                   32) Kraken2/2.1.1-foss-2018b-Perl-5.28.0

```
{: .output}

So in this case, loading the `Kraken2` module (a taxonomic sequence classification 
system software package), also loaded `BLAST+` and `Perl` as
well. Let's try unloading the `Kraken2` package.

```
{{ site.host_prompt }} module unload Kraken2/2.1.1-foss-2018b-Perl-5.28.0
{{ site.host_prompt }} module list
```
{: .language-bash}

```
Currently Loaded Modules:
  1) GCCcore/7.3.0                               17) bzip2/1.0.6-GCCcore-7.3.0
  2) zlib/1.2.11-GCCcore-7.3.0                   18) cURL/7.60.0-GCCcore-7.3.0
  3) binutils/2.30-GCCcore-7.3.0                 19) SAMtools/1.11-foss-2018b
  4) GCC/7.3.0-2.30                              20) expat/2.2.5-GCCcore-7.3.0
  5) numactl/2.0.11-GCCcore-7.3.0                21) Perl/5.28.0-GCCcore-7.3.0
  6) XZ/5.2.4-GCCcore-7.3.0                      22) PCRE/8.41-GCCcore-7.3.0
  7) libxml2/2.9.8-GCCcore-7.3.0                 23) Boost/1.67.0-foss-2018b
  8) libpciaccess/0.14-GCCcore-7.3.0             24) GMP/6.1.2-GCCcore-7.3.0
  9) hwloc/1.11.10-GCCcore-7.3.0                 25) libpng/1.6.34-GCCcore-7.3.0
 10) OpenMPI/3.1.1-GCC-7.3.0-2.30                26) NASM/2.13.03-GCCcore-7.3.0
 11) OpenBLAS/0.3.1-GCC-7.3.0-2.30               27) libjpeg-turbo/2.0.0-GCCcore-7.3.0
 12) gompi/2018b                                 28) LMDB/0.9.22-GCCcore-7.3.0
 13) FFTW/3.3.8-gompi-2018b                      29) BLAST+/2.7.1-foss-2018b
 14) ScaLAPACK/2.0.2-gompi-2018b-OpenBLAS-0.3.1  30) libidn/1.35-GCCcore-7.3.0
 15) foss/2018b                                  31) wget/1.20.1-GCCcore-7.3.0
 16) ncurses/6.1-GCCcore-7.3.0

```
{: .output}

So using `module unload` on Fox only "un-loads" the specifi  module
not the dependencies loaded alongside. If we wanted to unload everything 
at once, we could run `module purge` (unloads everything).

```
{{ site.host_prompt }} module purge
```
{: .language-bash}
```
The following modules were not unloaded:
  (Use "module --force purge" to unload all):

  1) StdEnv
```
{: .output}

Note that `module purge` is informative. It lets us know that all but a default
set of packages have been unloaded (and how to actually unload these if we
truly so desired).
